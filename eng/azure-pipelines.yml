trigger:
  batch: true
  branches:
    include:
    - dotnet/main
    - dotnet/release/*

pr: none

variables:
- template: /eng/common-variables.yml@self
- template: /eng/common/templates-official/variables/pool-providers.yml@self

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    sdl:
      codeql:
        language: javascript
      tsa:
        enabled: true
      policheck:
        enabled: true
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022
        os: windows
    containers:
      mariner20:
        image: mcr.microsoft.com/dotnet-buildtools/prereqs:cbl-mariner-2.0
    stages:
    - stage: build
      displayName: Build
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          enablePublishBuildArtifacts: true
          enablePublishBuildAssets: true
          enablePublishUsingPipelines: true
          jobs:

          ############ LINUX BUILD ############
          - job: Build_Linux
            displayName: Linux
            timeoutInMinutes: 360
            pool:
              name: $(DncEngInternalBuildPool)
              image: 1es-ubuntu-2204
              os: linux
            container: mariner20
            steps:
            - script: |
                git clean -ffdx
                git reset --hard HEAD
              displayName: 'Clean up working directory'

            - bash: |
                ./build.sh --ci --restore --build --pack --arch x64 --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:RestoreUsingNuGetTargets=false
              displayName: 'Build and package'
              env:
                ROOTFS_DIR: /crossrootfs/x64

            - bash:
                ./eng/common/build.sh --ci --restore --publish --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=linux /p:PlatformName=x64 --projects $(Build.SourcesDirectory)/emscripten.proj
              displayName: Publish packages
              condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

    ############ POST BUILD ARCADE LOGIC ############
    - template: /eng/common/templates-official/post-build/post-build.yml@self
      parameters:
        enableSourceLinkValidation: false
        enableSigningValidation: false
        enableSymbolValidation: false
        enableNugetValidation: true
